[알고리즘 문제풀이 스킬] 자바로 알파벳을 배열 인덱스로 변환하기

# 서론

알고리즘 PS 를 하다보면 알파벳을 인덱스로 변환해야하는 일이 종종 생긴다.

이를테면

- [백준 1316번 그룹 단어 체커](https://www.acmicpc.net/problem/1316)
- [백준 10809번 알파벳 찾기](https://www.acmicpc.net/problem/10809)

등등 이외에도 코딩테스트에서도 간간히 이와 비슷한 유형의 문제들에서 **알파벳을 배열의 인덱스로 변환** 하는 문제들이 몇가지 존재한다.

오늘은 그 문제들을 해결하기 위해서 알파벳을 **배열의 인덱스로 변환**하는 방법에 대해서 알아보려 한다.

# 알파벳을 배열의 인덱스로 변환하기

알파벳을 배열의 인덱스로 변환한다는 말은 다음과 같다.

[##_Image|kage@mTe4c/btrwpuCJuat/K6M5U9V0ECRKxm9V1d2fCk/img.png|CDM|1.3|{"originWidth":804,"originHeight":157,"style":"alignCenter"}_##]

알파벳은 총 26개의 문자가 존재한다.

그럼 이를 배열로 바꾼다면 a 는 0 번째 인덱스로 b 는 1번째 인덱스로 ... z 는 25 인덱스로 위치할 것이다.

이러한 것을 바로 배열의 인덱스로 알파벳을 변환한다고 한다.

이것을 코드로 봐보자

## ASCII 와 Character Point 를 이용하기

아래의 코드는 char 와 ASCII 코드를 이용한 방법을 표현한다.

key 는 바로

#### char 에서 ASCII 를 빼는 것이다.

```java
String word = "abc";

char[] letters = word.toCharArray(); // 각 문자를 char 형으로 변환

int a = letters[0] - 'a'; // letter[0] 의 ASCII 값과 'a' 의 ASCII 값을 빼기
int b = letters[1] - 'a';
int c = letters[2] - 'a';
// int c = letters[2] - 97; 처럼 ASCII point 를 바로 빼줘도 무방하다

System.out.printf("a=%d, b=%d, c=%d", a, b, c);
```

그럼 위의 결과와 같이 쉽게 변환이 가능하다.

## 연습 문제

이제 연습 문제로 다음과 같은 문제를 풀어보자

### 입력받는 문자 에서 등장하는 알파벳과 등장 횟수를 공백을 사이로 출력하라.

#### 입력

```
HELLO WORLD
```

#### 출력

```
H 1
E 1
L 3
O 2
W 1
R 1
D 1
```
